{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","redux/types.js","redux/reducer.js","redux/store.js","components/ContactForm/ContactForm.js","redux/actions.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Container/Container.js","App.js","index.js"],"names":["module","exports","ADD_CONTACT","DELETE_CONTACT","CHANGE_FILTER","combineReducers","items","state","id","name","number","type","payload","actionTypes","filter","rootReducer","contacts","phoneBookReducer","store","createStore","composeWithDevTools","connect","dispatch","onSubmit","shortid","generate","actions","useState","setName","setNumber","handleChange","event","currentTarget","value","className","styles","form","e","preventDefault","find","contact","toLowerCase","checkName","checkNumber","alert","label","input","pattern","title","required","placeholder","onChange","button","getVisibleContacts","allContacts","normalizedFilter","includes","onDeleteContact","map","item","onClick","target","Container","children","container","contactsLength","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce4907a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__13wYR\",\"button\":\"ContactList_button__3A1fT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1TvxU\",\"filter\":\"Filter_filter__1E0GQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1_U5l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__276K0\",\"label\":\"ContactForm_label__3i0x1\",\"input\":\"ContactForm_input__3i4mq\",\"button\":\"ContactForm_button__YPvoH\"};","export const ADD_CONTACT = 'contacts/add';\nexport const DELETE_CONTACT = 'contacts/delete';\nexport const CHANGE_FILTER = 'contacts/changeFilter';\n","import * as actionTypes from './types';\nimport { combineReducers } from 'redux';\n\nconst itemsReducer = (\n  state = [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ],\n  { type, payload },\n) => {\n  switch (type) {\n    case actionTypes.ADD_CONTACT:\n      return [...state, payload];\n\n    case actionTypes.DELETE_CONTACT:\n      return state.filter(({ id }) => id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nconst filterReducer = (state = '', { type, payload }) => {\n  switch (type) {\n    case actionTypes.CHANGE_FILTER:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport phoneBookReducer from './reducer';\n\nconst rootReducer = combineReducers({\n  contacts: phoneBookReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/actions';\nimport styles from './ContactForm.module.css';\n\nconst ContactForm = ({ onSubmit, contacts }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const resetName = () => {\n    setName('');\n  };\n\n  const resetNumber = () => {\n    setNumber('');\n  };\n\n  const checkName = name => {\n    return contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const checkNumber = number => {\n    return contacts.find(contact => contact.number === number);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (checkName(name)) {\n      alert(`${name} is already in contacts`);\n    } else if (checkNumber(number)) {\n      alert(`${number} is already in your contacts!`);\n    } else {\n      onSubmit(name, number);\n    }\n    resetName();\n    resetNumber();\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.label}>\n        Name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          placeholder=\"Adrian Smith\"\n          onChange={handleChange}\n        />\n      </label>\n\n      <label className={styles.label}>\n        Number\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          placeholder=\"000-00-00\"\n          onChange={handleChange}\n        />\n      </label>\n      <button className={styles.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nconst mapToDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(actions.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapToDispatchToProps)(ContactForm);\n","import shortid from 'shortid';\nimport * as actionTypes from './types';\n\nexport const addContact = (name, number) => ({\n  type: actionTypes.ADD_CONTACT,\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n});\n\nexport const deleteContact = contactId => ({\n  type: actionTypes.DELETE_CONTACT,\n  payload: contactId,\n});\n\nexport const changeFilter = value => ({\n  type: actionTypes.CHANGE_FILTER,\n  payload: value,\n});\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/actions';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul>\n      {contacts.map(({ name, number, id }) => (\n        <li key={id} className={styles.item}>\n          {name}: {number}\n          <button\n            className={styles.button}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(actions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/actions';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <>\n      <label className={styles.filter}>\n        Find contacts by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={onChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event => dispatch(actions.changeFilter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import { connect } from 'react-redux';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport Container from './components/Container';\nimport './App.css';\n\nfunction App({ contactsLength }) {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      {contactsLength > 1 && <Filter />}\n\n      {contactsLength > 0 ? (\n        <ContactList />\n      ) : (\n        <p>Currently your phonebook has no contacts. Please add them.</p>\n      )}\n    </Container>\n  );\n}\n\nconst mapStateToProps = state => ({\n  contactsLength: state.contacts.items.length,\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}